From f365b28151998cdb76af4371f08fc8d99159ce72 Mon Sep 17 00:00:00 2001
From: BuildTools <unconfigured@null.spigotmc.org>
Date: Mon, 4 Mar 2019 16:12:21 -0300
Subject: [PATCH] Release models

---
 index.html          |  28 +-
 modelo-a/index.html |   7 +
 modelo-a/style.css  |  10 +
 modelo-b/index.html | 199 ++++++----
 modelo-b/index.js   |  53 +--
 modelo-b/modal.js   | 779 ++++++++++++++++++++++++++++++++++++
 modelo-b/style.css  | 939 +++++++++++++++++++++++++++++++++++++++++++-
 7 files changed, 1915 insertions(+), 100 deletions(-)
 create mode 100644 modelo-b/modal.js

diff --git a/index.html b/index.html
index 795f036..a838205 100644
--- a/index.html
+++ b/index.html
@@ -1 +1,27 @@
-<meta http-equiv="refresh" content=0;url="http://www.luctor.ml/hotel-biss-inn/">
\ No newline at end of file
+<!DOCTYPE html>
+<html>
+
+<head>
+    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
+        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
+    <style type="text/css">
+        #centro {
+            width: 100%;
+            height: 50px;
+            line-height: 50px;
+            text-align: center;
+            position: absolute;
+            top: 50%;
+            margin-top: -50px;
+        }
+    </style>
+</head>
+
+<body class="bg-dark">
+    <div id="centro">
+        <button type="button" onclick="window.location.href = './modelo-a';" class="btn btn-success btn-lg btn-block">Modelo A</button>
+        <button type="button" onclick="window.location.href = './modelo-b';" class="btn btn-danger btn-lg btn-block">Modelo B</button>
+    </div>
+</body>
+
+</html>
\ No newline at end of file
diff --git a/modelo-a/index.html b/modelo-a/index.html
index 0564a43..71fe961 100644
--- a/modelo-a/index.html
+++ b/modelo-a/index.html
@@ -89,6 +89,13 @@
   <img class="icon" src="img/minus.png">
 </a>
 
+<footer>
+    <a href="tel:62991424224">
+      <p>Agência Luctor</p>
+      <p>(62) 99142-4224</p>
+    </a>
+  </footer>
+
 <script src="vendor/es5-shim.js"></script>
 <script src="vendor/eventShim.js"></script>
 <script src="vendor/classList.js"></script>
diff --git a/modelo-a/style.css b/modelo-a/style.css
index 0cc961d..82d386b 100644
--- a/modelo-a/style.css
+++ b/modelo-a/style.css
@@ -16,6 +16,16 @@
   -webkit-tap-highlight-color: rgba(0,0,0,0);
 }
 
+footer {
+  position: fixed;
+  padding: 10px 16px;
+  bottom: 0;
+  width: 100%;
+  text-align: center;
+  background-color: rgb(58, 68, 84);
+  background-color: rgba(58, 68, 84, 0.8);
+}
+
 html, body {
   width: 100%;
   height: 100%;
diff --git a/modelo-b/index.html b/modelo-b/index.html
index 0564a43..97f008a 100644
--- a/modelo-b/index.html
+++ b/modelo-b/index.html
@@ -1,104 +1,161 @@
 <!DOCTYPE html>
 <html>
+
 <head>
-<title>Biss Inn Hotel</title>
-<meta charset="utf-8">
-<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
-<meta name="viewport" content="target-densitydpi=device-dpi, width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, minimal-ui" />
-<style> @-ms-viewport { width: device-width; } </style>
-<link rel="stylesheet" href="vendor/reset.min.css">
-<link rel="stylesheet" href="style.css">
+  <title>Biss Inn Hotel</title>
+  <meta charset="utf-8">
+  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
+  <meta name="viewport"
+    content="target-densitydpi=device-dpi, width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no, minimal-ui" />
+  <style>
+    @-ms-viewport {
+      width: device-width;
+    }
+  </style>
+  <link rel="stylesheet" href="vendor/reset.min.css">
+  <link rel="stylesheet" href="style.css">
 </head>
+
 <body class="multiple-scenes ">
 
-<div id="pano"></div>
+  <div id="pano"></div>
+
+  <div id="sceneList">
+    <ul class="scenes">
 
-<div id="sceneList">
-  <ul class="scenes">
-    
       <a href="#" class="scene" data-id="0-entrada">
         <li class="text">Entrada</li>
       </a>
-    
+
       <a href="#" class="scene" data-id="1-recepo">
         <li class="text">Recepção</li>
       </a>
-    
+
       <a href="#" class="scene" data-id="2-trreo">
         <li class="text">Térreo</li>
       </a>
-    
+
       <a href="#" class="scene" data-id="3-hall">
         <li class="text">Hall</li>
       </a>
-    
+
       <a href="#" class="scene" data-id="4-bar">
         <li class="text">Bar</li>
       </a>
-    
+
       <a href="#" class="scene" data-id="5-piscina">
         <li class="text">Piscina</li>
       </a>
-    
+
       <a href="#" class="scene" data-id="6-sute">
         <li class="text">Suíte</li>
       </a>
-    
+
       <a href="#" class="scene" data-id="7-banheiro">
         <li class="text">Banheiro</li>
       </a>
-    
-  </ul>
-</div>
-
-<div id="titleBar">
-  <h1 class="sceneName"></h1>
-</div>
-
-<a href="#" id="autorotateToggle">
-  <img class="icon off" src="img/play.png">
-  <img class="icon on" src="img/pause.png">
-</a>
-
-<a href="#" id="fullscreenToggle">
-  <img class="icon off" src="img/fullscreen.png">
-  <img class="icon on" src="img/windowed.png">
-</a>
-
-<a href="#" id="sceneListToggle">
-  <img class="icon off" src="img/expand.png">
-  <img class="icon on" src="img/collapse.png">
-</a>
-
-<a href="#" id="viewUp" class="viewControlButton viewControlButton-1">
-  <img class="icon" src="img/up.png">
-</a>
-<a href="#" id="viewDown" class="viewControlButton viewControlButton-2">
-  <img class="icon" src="img/down.png">
-</a>
-<a href="#" id="viewLeft" class="viewControlButton viewControlButton-3">
-  <img class="icon" src="img/left.png">
-</a>
-<a href="#" id="viewRight" class="viewControlButton viewControlButton-4">
-  <img class="icon" src="img/right.png">
-</a>
-<a href="#" id="viewIn" class="viewControlButton viewControlButton-5">
-  <img class="icon" src="img/plus.png">
-</a>
-<a href="#" id="viewOut" class="viewControlButton viewControlButton-6">
-  <img class="icon" src="img/minus.png">
-</a>
-
-<script src="vendor/es5-shim.js"></script>
-<script src="vendor/eventShim.js"></script>
-<script src="vendor/classList.js"></script>
-<script src="vendor/requestAnimationFrame.js" ></script>
-<script src="vendor/screenfull.min.js" ></script>
-<script src="vendor/bowser.min.js" ></script>
-<script src="vendor/marzipano.js" ></script>
-
-<script src="data.js"></script>
-<script src="index.js"></script>
+
+    </ul>
+  </div>
+
+  <div id="titleBar">
+    <h1 class="sceneName"></h1>
+  </div>
+
+  <a href="#" id="autorotateToggle">
+    <img class="icon off" src="img/play.png">
+    <img class="icon on" src="img/pause.png">
+  </a>
+
+  <a href="#" id="fullscreenToggle">
+    <img class="icon off" src="img/fullscreen.png">
+    <img class="icon on" src="img/windowed.png">
+  </a>
+
+  <a href="#" id="sceneListToggle">
+    <img class="icon off" src="img/expand.png">
+    <img class="icon on" src="img/collapse.png">
+  </a>
+
+  <a href="#" id="viewUp" class="viewControlButton viewControlButton-1">
+    <img class="icon" src="img/up.png">
+  </a>
+  <a href="#" id="viewDown" class="viewControlButton viewControlButton-2">
+    <img class="icon" src="img/down.png">
+  </a>
+  <a href="#" id="viewLeft" class="viewControlButton viewControlButton-3">
+    <img class="icon" src="img/left.png">
+  </a>
+  <a href="#" id="viewRight" class="viewControlButton viewControlButton-4">
+    <img class="icon" src="img/right.png">
+  </a>
+  <a href="#" id="viewIn" class="viewControlButton viewControlButton-5">
+    <img class="icon" src="img/plus.png">
+  </a>
+  <a href="#" id="viewOut" class="viewControlButton viewControlButton-6">
+    <img class="icon" src="img/minus.png">
+  </a>
+
+  <a href="#" id="infoModal">
+    <img class="info" src="img/info.png">
+  </a>
+
+  <footer>
+    <div class="coluna1">
+      <a href="tel:62991424224">
+        <p>Agência Luctor</p>
+        <p>(62) 99142-4224</p>
+      </a>
+    </div>
+    <div class="coluna2">
+      <a href="tel:6240050800">
+        <p>Biss Inn Hotéis</p>
+        <p>(62) 4005-0800</p>
+      </a>
+    </div>
+  </footer>
+
+  <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle"
+    aria-hidden="true">
+    <div class="modal-dialog modal-dialog-centered" role="document">
+      <div class="modal-content">
+        <div class="modal-header">
+          <h5 class="modal-title" id="exampleModalCenterTitle">Biss Inn Hotéis</h5>
+          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
+            <span aria-hidden="true">&times;</span>
+          </button>
+        </div>
+        <div class="modal-body">
+          <p>Endereço: Avenida Anhanguera, QD99 LT100, nº50, Setor Universitário.</p>
+          <p>Localização: ???.</p>
+          <p>Metragem: 20m².</p>
+          <p>Quantidade de quartos: 200.</p>
+          <p>Suites: luxo e presidencial.</p>
+          <p>Garagem: 1 por suíte.</p>
+          <p>Andar: Poente/Nascente.</p>
+          <p>Diferenciais: Salão para eventos, Bar no Hall, área de lazer, estacionamento coberto.</p>
+        </div>
+        <div class="modal-footer">
+          <button type="button" class="btn btn-secondary" data-dismiss="modal">Ver fotos</button>
+        </div>
+      </div>
+    </div>
+  </div>
+
+  <script src="https://code.jquery.com/jquery-3.0.0.min.js"></script>
+  <script src="modal.js"></script>
+
+  <script src="vendor/es5-shim.js"></script>
+  <script src="vendor/eventShim.js"></script>
+  <script src="vendor/classList.js"></script>
+  <script src="vendor/requestAnimationFrame.js"></script>
+  <script src="vendor/screenfull.min.js"></script>
+  <script src="vendor/bowser.min.js"></script>
+  <script src="vendor/marzipano.js"></script>
+
+  <script src="data.js"></script>
+  <script src="index.js"></script>
 
 </body>
-</html>
+
+</html>
\ No newline at end of file
diff --git a/modelo-b/index.js b/modelo-b/index.js
index 7004c14..e332e47 100644
--- a/modelo-b/index.js
+++ b/modelo-b/index.js
@@ -15,7 +15,7 @@
  */
 'use strict';
 
-(function() {
+(function () {
   var Marzipano = window.Marzipano;
   var bowser = window.bowser;
   var screenfull = window.screenfull;
@@ -29,10 +29,11 @@
   var sceneListToggleElement = document.querySelector('#sceneListToggle');
   var autorotateToggleElement = document.querySelector('#autorotateToggle');
   var fullscreenToggleElement = document.querySelector('#fullscreenToggle');
+  var infoModalElemnt = document.querySelector('#infoModal');
 
   // Detect desktop or mobile mode.
   if (window.matchMedia) {
-    var setMode = function() {
+    var setMode = function () {
       if (mql.matches) {
         document.body.classList.remove('desktop');
         document.body.classList.add('mobile');
@@ -50,7 +51,7 @@
 
   // Detect whether we are on a touch device.
   document.body.classList.add('no-touch');
-  window.addEventListener('touchstart', function() {
+  window.addEventListener('touchstart', function () {
     document.body.classList.remove('no-touch');
     document.body.classList.add('touch');
   });
@@ -71,14 +72,14 @@
   var viewer = new Marzipano.Viewer(panoElement, viewerOpts);
 
   // Create scenes.
-  var scenes = data.scenes.map(function(data) {
+  var scenes = data.scenes.map(function (data) {
     var urlPrefix = "tiles";
     var source = Marzipano.ImageUrlSource.fromString(
       urlPrefix + "/" + data.id + "/{z}/{f}/{y}/{x}.jpg",
       { cubeMapPreviewUrl: urlPrefix + "/" + data.id + "/preview.jpg" });
     var geometry = new Marzipano.CubeGeometry(data.levels);
 
-    var limiter = Marzipano.RectilinearView.limit.traditional(data.faceSize, 100*Math.PI/180, 120*Math.PI/180);
+    var limiter = Marzipano.RectilinearView.limit.traditional(data.faceSize, 100 * Math.PI / 180, 120 * Math.PI / 180);
     var view = new Marzipano.RectilinearView(data.initialViewParameters, limiter);
 
     var scene = viewer.createScene({
@@ -89,13 +90,13 @@
     });
 
     // Create link hotspots.
-    data.linkHotspots.forEach(function(hotspot) {
+    data.linkHotspots.forEach(function (hotspot) {
       var element = createLinkHotspotElement(hotspot);
       scene.hotspotContainer().createHotspot(element, { yaw: hotspot.yaw, pitch: hotspot.pitch });
     });
 
     // Create info hotspots.
-    data.infoHotspots.forEach(function(hotspot) {
+    data.infoHotspots.forEach(function (hotspot) {
       var element = createInfoHotspotElement(hotspot);
       scene.hotspotContainer().createHotspot(element, { yaw: hotspot.yaw, pitch: hotspot.pitch });
     });
@@ -111,7 +112,7 @@
   var autorotate = Marzipano.autorotate({
     yawSpeed: 0.03,
     targetPitch: 0,
-    targetFov: Math.PI/2
+    targetFov: Math.PI / 2
   });
   if (data.settings.autorotateEnabled) {
     autorotateToggleElement.classList.add('enabled');
@@ -123,10 +124,10 @@
   // Set up fullscreen mode, if supported.
   if (screenfull.enabled && data.settings.fullscreenButton) {
     document.body.classList.add('fullscreen-enabled');
-    fullscreenToggleElement.addEventListener('click', function() {
+    fullscreenToggleElement.addEventListener('click', function () {
       screenfull.toggle();
     });
-    screenfull.on('change', function() {
+    screenfull.on('change', function () {
       if (screenfull.isFullscreen) {
         fullscreenToggleElement.classList.add('enabled');
       } else {
@@ -146,9 +147,9 @@
   }
 
   // Set handler for scene switch.
-  scenes.forEach(function(scene) {
+  scenes.forEach(function (scene) {
     var el = document.querySelector('#sceneList .scene[data-id="' + scene.data.id + '"]');
-    el.addEventListener('click', function() {
+    el.addEventListener('click', function () {
       switchScene(scene);
       // On mobile, hide scene list after selecting a scene.
       if (document.body.classList.contains('mobile')) {
@@ -171,12 +172,12 @@
 
   // Associate view controls with elements.
   var controls = viewer.controls();
-  controls.registerMethod('upElement',    new Marzipano.ElementPressControlMethod(viewUpElement,     'y', -velocity, friction), true);
-  controls.registerMethod('downElement',  new Marzipano.ElementPressControlMethod(viewDownElement,   'y',  velocity, friction), true);
-  controls.registerMethod('leftElement',  new Marzipano.ElementPressControlMethod(viewLeftElement,   'x', -velocity, friction), true);
-  controls.registerMethod('rightElement', new Marzipano.ElementPressControlMethod(viewRightElement,  'x',  velocity, friction), true);
-  controls.registerMethod('inElement',    new Marzipano.ElementPressControlMethod(viewInElement,  'zoom', -velocity, friction), true);
-  controls.registerMethod('outElement',   new Marzipano.ElementPressControlMethod(viewOutElement, 'zoom',  velocity, friction), true);
+  controls.registerMethod('upElement', new Marzipano.ElementPressControlMethod(viewUpElement, 'y', -velocity, friction), true);
+  controls.registerMethod('downElement', new Marzipano.ElementPressControlMethod(viewDownElement, 'y', velocity, friction), true);
+  controls.registerMethod('leftElement', new Marzipano.ElementPressControlMethod(viewLeftElement, 'x', -velocity, friction), true);
+  controls.registerMethod('rightElement', new Marzipano.ElementPressControlMethod(viewRightElement, 'x', velocity, friction), true);
+  controls.registerMethod('inElement', new Marzipano.ElementPressControlMethod(viewInElement, 'zoom', -velocity, friction), true);
+  controls.registerMethod('outElement', new Marzipano.ElementPressControlMethod(viewOutElement, 'zoom', velocity, friction), true);
 
   function sanitize(s) {
     return s.replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;');
@@ -244,6 +245,10 @@
     }
   }
 
+  infoModalElemnt.addEventListener('click', function () {
+    $('#myModal').modal('show')
+  });
+
   function createLinkHotspotElement(hotspot) {
 
     // Create wrapper element to hold icon and tooltip.
@@ -257,14 +262,14 @@
     icon.classList.add('link-hotspot-icon');
 
     // Set rotation transform.
-    var transformProperties = [ '-ms-transform', '-webkit-transform', 'transform' ];
+    var transformProperties = ['-ms-transform', '-webkit-transform', 'transform'];
     for (var i = 0; i < transformProperties.length; i++) {
       var property = transformProperties[i];
       icon.style[property] = 'rotate(' + hotspot.rotation + 'rad)';
     }
 
     // Add click event handler.
-    wrapper.addEventListener('click', function() {
+    wrapper.addEventListener('click', function () {
       switchScene(findSceneById(hotspot.target));
     });
 
@@ -339,7 +344,7 @@
     modal.classList.add('info-hotspot-modal');
     document.body.appendChild(modal);
 
-    var toggle = function() {
+    var toggle = function () {
       wrapper.classList.toggle('visible');
       modal.classList.toggle('visible');
     };
@@ -359,10 +364,10 @@
 
   // Prevent touch and scroll events from reaching the parent element.
   function stopTouchAndScrollEventPropagation(element, eventList) {
-    var eventList = [ 'touchstart', 'touchmove', 'touchend', 'touchcancel',
-                      'wheel', 'mousewheel' ];
+    var eventList = ['touchstart', 'touchmove', 'touchend', 'touchcancel',
+      'wheel', 'mousewheel'];
     for (var i = 0; i < eventList.length; i++) {
-      element.addEventListener(eventList[i], function(event) {
+      element.addEventListener(eventList[i], function (event) {
         event.stopPropagation();
       });
     }
diff --git a/modelo-b/modal.js b/modelo-b/modal.js
new file mode 100644
index 0000000..5d73a51
--- /dev/null
+++ b/modelo-b/modal.js
@@ -0,0 +1,779 @@
+/*!
+  * Bootstrap v4.1.3 (https://getbootstrap.com/)
+  * Copyright 2011-2018 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
+  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
+  */
+(function (global, factory) {
+    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('jquery'), require('popper.js')) :
+        typeof define === 'function' && define.amd ? define(['exports', 'jquery', 'popper.js'], factory) :
+            (factory((global.bootstrap = {}), global.jQuery, global.Popper));
+}(this, (function (exports, $, Popper) {
+    'use strict';
+
+    $ = $ && $.hasOwnProperty('default') ? $['default'] : $;
+    Popper = Popper && Popper.hasOwnProperty('default') ? Popper['default'] : Popper;
+
+    function _defineProperties(target, props) {
+        for (var i = 0; i < props.length; i++) {
+            var descriptor = props[i];
+            descriptor.enumerable = descriptor.enumerable || false;
+            descriptor.configurable = true;
+            if ("value" in descriptor) descriptor.writable = true;
+            Object.defineProperty(target, descriptor.key, descriptor);
+        }
+    }
+
+    function _createClass(Constructor, protoProps, staticProps) {
+        if (protoProps) _defineProperties(Constructor.prototype, protoProps);
+        if (staticProps) _defineProperties(Constructor, staticProps);
+        return Constructor;
+    }
+
+    function _defineProperty(obj, key, value) {
+        if (key in obj) {
+            Object.defineProperty(obj, key, {
+                value: value,
+                enumerable: true,
+                configurable: true,
+                writable: true
+            });
+        } else {
+            obj[key] = value;
+        }
+
+        return obj;
+    }
+
+    function _objectSpread(target) {
+        for (var i = 1; i < arguments.length; i++) {
+            var source = arguments[i] != null ? arguments[i] : {};
+            var ownKeys = Object.keys(source);
+
+            if (typeof Object.getOwnPropertySymbols === 'function') {
+                ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
+                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;
+                }));
+            }
+
+            ownKeys.forEach(function (key) {
+                _defineProperty(target, key, source[key]);
+            });
+        }
+
+        return target;
+    }
+
+    function _inheritsLoose(subClass, superClass) {
+        subClass.prototype = Object.create(superClass.prototype);
+        subClass.prototype.constructor = subClass;
+        subClass.__proto__ = superClass;
+    }
+
+    /**
+     * --------------------------------------------------------------------------
+     * Bootstrap (v4.1.3): util.js
+     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
+     * --------------------------------------------------------------------------
+     */
+
+    var Util = function ($$$1) {
+        /**
+         * ------------------------------------------------------------------------
+         * Private TransitionEnd Helpers
+         * ------------------------------------------------------------------------
+         */
+        var TRANSITION_END = 'transitionend';
+        var MAX_UID = 1000000;
+        var MILLISECONDS_MULTIPLIER = 1000; // Shoutout AngusCroll (https://goo.gl/pxwQGp)
+
+        function toType(obj) {
+            return {}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();
+        }
+
+        function getSpecialTransitionEndEvent() {
+            return {
+                bindType: TRANSITION_END,
+                delegateType: TRANSITION_END,
+                handle: function handle(event) {
+                    if ($$$1(event.target).is(this)) {
+                        return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params
+                    }
+
+                    return undefined; // eslint-disable-line no-undefined
+                }
+            };
+        }
+
+        function transitionEndEmulator(duration) {
+            var _this = this;
+
+            var called = false;
+            $$$1(this).one(Util.TRANSITION_END, function () {
+                called = true;
+            });
+            setTimeout(function () {
+                if (!called) {
+                    Util.triggerTransitionEnd(_this);
+                }
+            }, duration);
+            return this;
+        }
+
+        function setTransitionEndSupport() {
+            $$$1.fn.emulateTransitionEnd = transitionEndEmulator;
+            $$$1.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();
+        }
+        /**
+         * --------------------------------------------------------------------------
+         * Public Util Api
+         * --------------------------------------------------------------------------
+         */
+
+
+        var Util = {
+            TRANSITION_END: 'bsTransitionEnd',
+            getUID: function getUID(prefix) {
+                do {
+                    // eslint-disable-next-line no-bitwise
+                    prefix += ~~(Math.random() * MAX_UID); // "~~" acts like a faster Math.floor() here
+                } while (document.getElementById(prefix));
+
+                return prefix;
+            },
+            getSelectorFromElement: function getSelectorFromElement(element) {
+                var selector = element.getAttribute('data-target');
+
+                if (!selector || selector === '#') {
+                    selector = element.getAttribute('href') || '';
+                }
+
+                try {
+                    return document.querySelector(selector) ? selector : null;
+                } catch (err) {
+                    return null;
+                }
+            },
+            getTransitionDurationFromElement: function getTransitionDurationFromElement(element) {
+                if (!element) {
+                    return 0;
+                } // Get transition-duration of the element
+
+
+                var transitionDuration = $$$1(element).css('transition-duration');
+                var floatTransitionDuration = parseFloat(transitionDuration); // Return 0 if element or transition duration is not found
+
+                if (!floatTransitionDuration) {
+                    return 0;
+                } // If multiple durations are defined, take the first
+
+
+                transitionDuration = transitionDuration.split(',')[0];
+                return parseFloat(transitionDuration) * MILLISECONDS_MULTIPLIER;
+            },
+            reflow: function reflow(element) {
+                return element.offsetHeight;
+            },
+            triggerTransitionEnd: function triggerTransitionEnd(element) {
+                $$$1(element).trigger(TRANSITION_END);
+            },
+            // TODO: Remove in v5
+            supportsTransitionEnd: function supportsTransitionEnd() {
+                return Boolean(TRANSITION_END);
+            },
+            isElement: function isElement(obj) {
+                return (obj[0] || obj).nodeType;
+            },
+            typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {
+                for (var property in configTypes) {
+                    if (Object.prototype.hasOwnProperty.call(configTypes, property)) {
+                        var expectedTypes = configTypes[property];
+                        var value = config[property];
+                        var valueType = value && Util.isElement(value) ? 'element' : toType(value);
+
+                        if (!new RegExp(expectedTypes).test(valueType)) {
+                            throw new Error(componentName.toUpperCase() + ": " + ("Option \"" + property + "\" provided type \"" + valueType + "\" ") + ("but expected type \"" + expectedTypes + "\"."));
+                        }
+                    }
+                }
+            }
+        };
+        setTransitionEndSupport();
+        return Util;
+    }($);
+
+    /**
+     * --------------------------------------------------------------------------
+     * Bootstrap (v4.1.3): modal.js
+     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
+     * --------------------------------------------------------------------------
+     */
+
+    var Modal = function ($$$1) {
+        /**
+         * ------------------------------------------------------------------------
+         * Constants
+         * ------------------------------------------------------------------------
+         */
+        var NAME = 'modal';
+        var VERSION = '4.1.3';
+        var DATA_KEY = 'bs.modal';
+        var EVENT_KEY = "." + DATA_KEY;
+        var DATA_API_KEY = '.data-api';
+        var JQUERY_NO_CONFLICT = $$$1.fn[NAME];
+        var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key
+
+        var Default = {
+            backdrop: true,
+            keyboard: true,
+            focus: true,
+            show: true
+        };
+        var DefaultType = {
+            backdrop: '(boolean|string)',
+            keyboard: 'boolean',
+            focus: 'boolean',
+            show: 'boolean'
+        };
+        var Event = {
+            HIDE: "hide" + EVENT_KEY,
+            HIDDEN: "hidden" + EVENT_KEY,
+            SHOW: "show" + EVENT_KEY,
+            SHOWN: "shown" + EVENT_KEY,
+            FOCUSIN: "focusin" + EVENT_KEY,
+            RESIZE: "resize" + EVENT_KEY,
+            CLICK_DISMISS: "click.dismiss" + EVENT_KEY,
+            KEYDOWN_DISMISS: "keydown.dismiss" + EVENT_KEY,
+            MOUSEUP_DISMISS: "mouseup.dismiss" + EVENT_KEY,
+            MOUSEDOWN_DISMISS: "mousedown.dismiss" + EVENT_KEY,
+            CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY
+        };
+        var ClassName = {
+            SCROLLBAR_MEASURER: 'modal-scrollbar-measure',
+            BACKDROP: 'modal-backdrop',
+            OPEN: 'modal-open',
+            FADE: 'fade',
+            SHOW: 'show'
+        };
+        var Selector = {
+            DIALOG: '.modal-dialog',
+            DATA_TOGGLE: '[data-toggle="modal"]',
+            DATA_DISMISS: '[data-dismiss="modal"]',
+            FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',
+            STICKY_CONTENT: '.sticky-top'
+            /**
+             * ------------------------------------------------------------------------
+             * Class Definition
+             * ------------------------------------------------------------------------
+             */
+
+        };
+
+        var Modal =
+            /*#__PURE__*/
+            function () {
+                function Modal(element, config) {
+                    this._config = this._getConfig(config);
+                    this._element = element;
+                    this._dialog = element.querySelector(Selector.DIALOG);
+                    this._backdrop = null;
+                    this._isShown = false;
+                    this._isBodyOverflowing = false;
+                    this._ignoreBackdropClick = false;
+                    this._scrollbarWidth = 0;
+                } // Getters
+
+
+                var _proto = Modal.prototype;
+
+                // Public
+                _proto.toggle = function toggle(relatedTarget) {
+                    return this._isShown ? this.hide() : this.show(relatedTarget);
+                };
+
+                _proto.show = function show(relatedTarget) {
+                    var _this = this;
+
+                    if (this._isTransitioning || this._isShown) {
+                        return;
+                    }
+
+                    if ($$$1(this._element).hasClass(ClassName.FADE)) {
+                        this._isTransitioning = true;
+                    }
+
+                    var showEvent = $$$1.Event(Event.SHOW, {
+                        relatedTarget: relatedTarget
+                    });
+                    $$$1(this._element).trigger(showEvent);
+
+                    if (this._isShown || showEvent.isDefaultPrevented()) {
+                        return;
+                    }
+
+                    this._isShown = true;
+
+                    this._checkScrollbar();
+
+                    this._setScrollbar();
+
+                    this._adjustDialog();
+
+                    $$$1(document.body).addClass(ClassName.OPEN);
+
+                    this._setEscapeEvent();
+
+                    this._setResizeEvent();
+
+                    $$$1(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, function (event) {
+                        return _this.hide(event);
+                    });
+                    $$$1(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {
+                        $$$1(_this._element).one(Event.MOUSEUP_DISMISS, function (event) {
+                            if ($$$1(event.target).is(_this._element)) {
+                                _this._ignoreBackdropClick = true;
+                            }
+                        });
+                    });
+
+                    this._showBackdrop(function () {
+                        return _this._showElement(relatedTarget);
+                    });
+                };
+
+                _proto.hide = function hide(event) {
+                    var _this2 = this;
+
+                    if (event) {
+                        event.preventDefault();
+                    }
+
+                    if (this._isTransitioning || !this._isShown) {
+                        return;
+                    }
+
+                    var hideEvent = $$$1.Event(Event.HIDE);
+                    $$$1(this._element).trigger(hideEvent);
+
+                    if (!this._isShown || hideEvent.isDefaultPrevented()) {
+                        return;
+                    }
+
+                    this._isShown = false;
+                    var transition = $$$1(this._element).hasClass(ClassName.FADE);
+
+                    if (transition) {
+                        this._isTransitioning = true;
+                    }
+
+                    this._setEscapeEvent();
+
+                    this._setResizeEvent();
+
+                    $$$1(document).off(Event.FOCUSIN);
+                    $$$1(this._element).removeClass(ClassName.SHOW);
+                    $$$1(this._element).off(Event.CLICK_DISMISS);
+                    $$$1(this._dialog).off(Event.MOUSEDOWN_DISMISS);
+
+                    if (transition) {
+                        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
+                        $$$1(this._element).one(Util.TRANSITION_END, function (event) {
+                            return _this2._hideModal(event);
+                        }).emulateTransitionEnd(transitionDuration);
+                    } else {
+                        this._hideModal();
+                    }
+                };
+
+                _proto.dispose = function dispose() {
+                    $$$1.removeData(this._element, DATA_KEY);
+                    $$$1(window, document, this._element, this._backdrop).off(EVENT_KEY);
+                    this._config = null;
+                    this._element = null;
+                    this._dialog = null;
+                    this._backdrop = null;
+                    this._isShown = null;
+                    this._isBodyOverflowing = null;
+                    this._ignoreBackdropClick = null;
+                    this._scrollbarWidth = null;
+                };
+
+                _proto.handleUpdate = function handleUpdate() {
+                    this._adjustDialog();
+                }; // Private
+
+
+                _proto._getConfig = function _getConfig(config) {
+                    config = _objectSpread({}, Default, config);
+                    Util.typeCheckConfig(NAME, config, DefaultType);
+                    return config;
+                };
+
+                _proto._showElement = function _showElement(relatedTarget) {
+                    var _this3 = this;
+
+                    var transition = $$$1(this._element).hasClass(ClassName.FADE);
+
+                    if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
+                        // Don't move modal's DOM position
+                        document.body.appendChild(this._element);
+                    }
+
+                    this._element.style.display = 'block';
+
+                    this._element.removeAttribute('aria-hidden');
+
+                    this._element.scrollTop = 0;
+
+                    if (transition) {
+                        Util.reflow(this._element);
+                    }
+
+                    $$$1(this._element).addClass(ClassName.SHOW);
+
+                    if (this._config.focus) {
+                        this._enforceFocus();
+                    }
+
+                    var shownEvent = $$$1.Event(Event.SHOWN, {
+                        relatedTarget: relatedTarget
+                    });
+
+                    var transitionComplete = function transitionComplete() {
+                        if (_this3._config.focus) {
+                            _this3._element.focus();
+                        }
+
+                        _this3._isTransitioning = false;
+                        $$$1(_this3._element).trigger(shownEvent);
+                    };
+
+                    if (transition) {
+                        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
+                        $$$1(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);
+                    } else {
+                        transitionComplete();
+                    }
+                };
+
+                _proto._enforceFocus = function _enforceFocus() {
+                    var _this4 = this;
+
+                    $$$1(document).off(Event.FOCUSIN) // Guard against infinite focus loop
+                        .on(Event.FOCUSIN, function (event) {
+                            if (document !== event.target && _this4._element !== event.target && $$$1(_this4._element).has(event.target).length === 0) {
+                                _this4._element.focus();
+                            }
+                        });
+                };
+
+                _proto._setEscapeEvent = function _setEscapeEvent() {
+                    var _this5 = this;
+
+                    if (this._isShown && this._config.keyboard) {
+                        $$$1(this._element).on(Event.KEYDOWN_DISMISS, function (event) {
+                            if (event.which === ESCAPE_KEYCODE) {
+                                event.preventDefault();
+
+                                _this5.hide();
+                            }
+                        });
+                    } else if (!this._isShown) {
+                        $$$1(this._element).off(Event.KEYDOWN_DISMISS);
+                    }
+                };
+
+                _proto._setResizeEvent = function _setResizeEvent() {
+                    var _this6 = this;
+
+                    if (this._isShown) {
+                        $$$1(window).on(Event.RESIZE, function (event) {
+                            return _this6.handleUpdate(event);
+                        });
+                    } else {
+                        $$$1(window).off(Event.RESIZE);
+                    }
+                };
+
+                _proto._hideModal = function _hideModal() {
+                    var _this7 = this;
+
+                    this._element.style.display = 'none';
+
+                    this._element.setAttribute('aria-hidden', true);
+
+                    this._isTransitioning = false;
+
+                    this._showBackdrop(function () {
+                        $$$1(document.body).removeClass(ClassName.OPEN);
+
+                        _this7._resetAdjustments();
+
+                        _this7._resetScrollbar();
+
+                        $$$1(_this7._element).trigger(Event.HIDDEN);
+                    });
+                };
+
+                _proto._removeBackdrop = function _removeBackdrop() {
+                    if (this._backdrop) {
+                        $$$1(this._backdrop).remove();
+                        this._backdrop = null;
+                    }
+                };
+
+                _proto._showBackdrop = function _showBackdrop(callback) {
+                    var _this8 = this;
+
+                    var animate = $$$1(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';
+
+                    if (this._isShown && this._config.backdrop) {
+                        this._backdrop = document.createElement('div');
+                        this._backdrop.className = ClassName.BACKDROP;
+
+                        if (animate) {
+                            this._backdrop.classList.add(animate);
+                        }
+
+                        $$$1(this._backdrop).appendTo(document.body);
+                        $$$1(this._element).on(Event.CLICK_DISMISS, function (event) {
+                            if (_this8._ignoreBackdropClick) {
+                                _this8._ignoreBackdropClick = false;
+                                return;
+                            }
+
+                            if (event.target !== event.currentTarget) {
+                                return;
+                            }
+
+                            if (_this8._config.backdrop === 'static') {
+                                _this8._element.focus();
+                            } else {
+                                _this8.hide();
+                            }
+                        });
+
+                        if (animate) {
+                            Util.reflow(this._backdrop);
+                        }
+
+                        $$$1(this._backdrop).addClass(ClassName.SHOW);
+
+                        if (!callback) {
+                            return;
+                        }
+
+                        if (!animate) {
+                            callback();
+                            return;
+                        }
+
+                        var backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);
+                        $$$1(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);
+                    } else if (!this._isShown && this._backdrop) {
+                        $$$1(this._backdrop).removeClass(ClassName.SHOW);
+
+                        var callbackRemove = function callbackRemove() {
+                            _this8._removeBackdrop();
+
+                            if (callback) {
+                                callback();
+                            }
+                        };
+
+                        if ($$$1(this._element).hasClass(ClassName.FADE)) {
+                            var _backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);
+
+                            $$$1(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);
+                        } else {
+                            callbackRemove();
+                        }
+                    } else if (callback) {
+                        callback();
+                    }
+                }; // ----------------------------------------------------------------------
+                // the following methods are used to handle overflowing modals
+                // todo (fat): these should probably be refactored out of modal.js
+                // ----------------------------------------------------------------------
+
+
+                _proto._adjustDialog = function _adjustDialog() {
+                    var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;
+
+                    if (!this._isBodyOverflowing && isModalOverflowing) {
+                        this._element.style.paddingLeft = this._scrollbarWidth + "px";
+                    }
+
+                    if (this._isBodyOverflowing && !isModalOverflowing) {
+                        this._element.style.paddingRight = this._scrollbarWidth + "px";
+                    }
+                };
+
+                _proto._resetAdjustments = function _resetAdjustments() {
+                    this._element.style.paddingLeft = '';
+                    this._element.style.paddingRight = '';
+                };
+
+                _proto._checkScrollbar = function _checkScrollbar() {
+                    var rect = document.body.getBoundingClientRect();
+                    this._isBodyOverflowing = rect.left + rect.right < window.innerWidth;
+                    this._scrollbarWidth = this._getScrollbarWidth();
+                };
+
+                _proto._setScrollbar = function _setScrollbar() {
+                    var _this9 = this;
+
+                    if (this._isBodyOverflowing) {
+                        // Note: DOMNode.style.paddingRight returns the actual value or '' if not set
+                        //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set
+                        var fixedContent = [].slice.call(document.querySelectorAll(Selector.FIXED_CONTENT));
+                        var stickyContent = [].slice.call(document.querySelectorAll(Selector.STICKY_CONTENT)); // Adjust fixed content padding
+
+                        $$$1(fixedContent).each(function (index, element) {
+                            var actualPadding = element.style.paddingRight;
+                            var calculatedPadding = $$$1(element).css('padding-right');
+                            $$$1(element).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + _this9._scrollbarWidth + "px");
+                        }); // Adjust sticky content margin
+
+                        $$$1(stickyContent).each(function (index, element) {
+                            var actualMargin = element.style.marginRight;
+                            var calculatedMargin = $$$1(element).css('margin-right');
+                            $$$1(element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) - _this9._scrollbarWidth + "px");
+                        }); // Adjust body padding
+
+                        var actualPadding = document.body.style.paddingRight;
+                        var calculatedPadding = $$$1(document.body).css('padding-right');
+                        $$$1(document.body).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + this._scrollbarWidth + "px");
+                    }
+                };
+
+                _proto._resetScrollbar = function _resetScrollbar() {
+                    // Restore fixed content padding
+                    var fixedContent = [].slice.call(document.querySelectorAll(Selector.FIXED_CONTENT));
+                    $$$1(fixedContent).each(function (index, element) {
+                        var padding = $$$1(element).data('padding-right');
+                        $$$1(element).removeData('padding-right');
+                        element.style.paddingRight = padding ? padding : '';
+                    }); // Restore sticky content
+
+                    var elements = [].slice.call(document.querySelectorAll("" + Selector.STICKY_CONTENT));
+                    $$$1(elements).each(function (index, element) {
+                        var margin = $$$1(element).data('margin-right');
+
+                        if (typeof margin !== 'undefined') {
+                            $$$1(element).css('margin-right', margin).removeData('margin-right');
+                        }
+                    }); // Restore body padding
+
+                    var padding = $$$1(document.body).data('padding-right');
+                    $$$1(document.body).removeData('padding-right');
+                    document.body.style.paddingRight = padding ? padding : '';
+                };
+
+                _proto._getScrollbarWidth = function _getScrollbarWidth() {
+                    // thx d.walsh
+                    var scrollDiv = document.createElement('div');
+                    scrollDiv.className = ClassName.SCROLLBAR_MEASURER;
+                    document.body.appendChild(scrollDiv);
+                    var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
+                    document.body.removeChild(scrollDiv);
+                    return scrollbarWidth;
+                }; // Static
+
+
+                Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {
+                    return this.each(function () {
+                        var data = $$$1(this).data(DATA_KEY);
+
+                        var _config = _objectSpread({}, Default, $$$1(this).data(), typeof config === 'object' && config ? config : {});
+
+                        if (!data) {
+                            data = new Modal(this, _config);
+                            $$$1(this).data(DATA_KEY, data);
+                        }
+
+                        if (typeof config === 'string') {
+                            if (typeof data[config] === 'undefined') {
+                                throw new TypeError("No method named \"" + config + "\"");
+                            }
+
+                            data[config](relatedTarget);
+                        } else if (_config.show) {
+                            data.show(relatedTarget);
+                        }
+                    });
+                };
+
+                _createClass(Modal, null, [{
+                    key: "VERSION",
+                    get: function get() {
+                        return VERSION;
+                    }
+                }, {
+                    key: "Default",
+                    get: function get() {
+                        return Default;
+                    }
+                }]);
+
+                return Modal;
+            }();
+        /**
+         * ------------------------------------------------------------------------
+         * Data Api implementation
+         * ------------------------------------------------------------------------
+         */
+
+
+        $$$1(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {
+            var _this10 = this;
+
+            var target;
+            var selector = Util.getSelectorFromElement(this);
+
+            if (selector) {
+                target = document.querySelector(selector);
+            }
+
+            var config = $$$1(target).data(DATA_KEY) ? 'toggle' : _objectSpread({}, $$$1(target).data(), $$$1(this).data());
+
+            if (this.tagName === 'A' || this.tagName === 'AREA') {
+                event.preventDefault();
+            }
+
+            var $target = $$$1(target).one(Event.SHOW, function (showEvent) {
+                if (showEvent.isDefaultPrevented()) {
+                    // Only register focus restorer if modal will actually get shown
+                    return;
+                }
+
+                $target.one(Event.HIDDEN, function () {
+                    if ($$$1(_this10).is(':visible')) {
+                        _this10.focus();
+                    }
+                });
+            });
+
+            Modal._jQueryInterface.call($$$1(target), config, this);
+        });
+        /**
+         * ------------------------------------------------------------------------
+         * jQuery
+         * ------------------------------------------------------------------------
+         */
+
+        $$$1.fn[NAME] = Modal._jQueryInterface;
+        $$$1.fn[NAME].Constructor = Modal;
+
+        $$$1.fn[NAME].noConflict = function () {
+            $$$1.fn[NAME] = JQUERY_NO_CONFLICT;
+            return Modal._jQueryInterface;
+        };
+
+        return Modal;
+    }($);
+
+
+
+})));
+
+$('#myModal').modal('show')
\ No newline at end of file
diff --git a/modelo-b/style.css b/modelo-b/style.css
index 0cc961d..e78b54e 100644
--- a/modelo-b/style.css
+++ b/modelo-b/style.css
@@ -17,8 +17,8 @@
 }
 
 html, body {
-  width: 100%;
-  height: 100%;
+  width: 70%;
+  height: 70%;
   padding: 0;
   margin: 0;
   overflow: hidden;
@@ -58,11 +58,11 @@ a, a:hover, a:active, a:visited {
 
 /* If there is a fullscreen button the title bar must make space for it */
 body.fullscreen-enabled #titleBar {
-  right: 80px;
+  right: 120px;
 }
 
 body.fullscreen-enabled.mobile #titleBar {
-  right: 100px;
+  right: 140px;
 }
 
 /* If there are multiple scenes the title bar must make space for the scene list toggle */
@@ -145,6 +145,37 @@ body.fullscreen-enabled #fullscreenToggle {
   display: none;
 }
 
+#infoModal {
+  display: block;
+  position: absolute;
+  top: 0;
+  right: 0px;
+  width: 40px;
+  height: 40px;
+  padding: 5px;
+  background-color: rgb(103,115,131);
+  background-color: rgba(103,115,131,0.8);
+}
+
+.mobile #infoModal {
+  width: 50px;
+  height: 50px;
+  right: 50px;
+}
+
+#infoModal .info {
+  position: absolute;
+  top: 5px;
+  right: 5px;
+  width: 30px;
+  height: 30px;
+}
+
+.mobile #infoModal .info {
+  top: 10px;
+  right: 10px;
+}
+
 #autorotateToggle {
   display: block;
   position: absolute;
@@ -171,6 +202,14 @@ body.fullscreen-enabled.mobile #autorotateToggle {
   right: 50px;
 }
 
+body.fullscreen-enabled #infoModal {
+  right: 80px;
+}
+
+body.fullscreen-enabled.mobile #infoModal {
+  right: 100px;
+}
+
 #autorotateToggle .icon {
   position: absolute;
   top: 5px;
@@ -828,3 +867,895 @@ body.view-control-buttons .viewControlButton {
 .viewControlButton-6 {
   margin-left: 105px;
 }
+
+.coluna1 {
+  width: 50%;
+  float: left;
+  text-align: center;
+  border-top-style: hidden;
+  border-color: white;
+}
+
+.coluna2 {
+  width: 50%;
+  float: right;
+  text-align: center;
+  border-left-style: solid;
+  border-color: white;
+  border-width: 1px;
+}
+
+footer {
+  position: fixed;
+  padding: 10px 16px;
+  bottom: 0;
+  width: 100%;
+  background-color: rgb(58, 68, 84);
+  background-color: rgba(58, 68, 84, 0.8);
+}
+
+.close {
+  float: right;
+  font-size: 1.5rem;
+  font-weight: 700;
+  line-height: 1;
+  color: #000;
+  text-shadow: 0 1px 0 #fff;
+  opacity: .5;
+}
+
+.close:not(:disabled):not(.disabled) {
+  cursor: pointer;
+}
+
+.close:not(:disabled):not(.disabled):hover, .close:not(:disabled):not(.disabled):focus {
+  color: #000;
+  text-decoration: none;
+  opacity: .75;
+}
+
+button.close {
+  padding: 0;
+  background-color: transparent;
+  border: 0;
+  -webkit-appearance: none;
+}
+
+.modal-open {
+  overflow: hidden;
+}
+
+.modal-open .modal {
+  overflow-x: hidden;
+  overflow-y: auto;
+}
+
+.modal {
+  position: fixed;
+  top: 0;
+  right: 0;
+  bottom: 0;
+  left: 0;
+  z-index: 1050;
+  display: none;
+  overflow: hidden;
+  outline: 0;
+}
+
+.modal-dialog {
+  position: relative;
+  width: auto;
+  margin: 0.5rem;
+  pointer-events: none;
+}
+
+.modal.fade .modal-dialog {
+  transition: -webkit-transform 0.3s ease-out;
+  transition: transform 0.3s ease-out;
+  transition: transform 0.3s ease-out, -webkit-transform 0.3s ease-out;
+  -webkit-transform: translate(0, -25%);
+  transform: translate(0, -25%);
+}
+
+@media screen and (prefers-reduced-motion: reduce) {
+  .modal.fade .modal-dialog {
+    transition: none;
+  }
+}
+
+.modal.show .modal-dialog {
+  -webkit-transform: translate(0, 0);
+  transform: translate(0, 0);
+}
+
+.modal-dialog-centered {
+  display: -ms-flexbox;
+  display: flex;
+  -ms-flex-align: center;
+  align-items: center;
+  min-height: calc(100% - (0.5rem * 2));
+}
+
+.modal-dialog-centered::before {
+  display: block;
+  height: calc(100vh - (0.5rem * 2));
+  content: "";
+}
+
+.modal-content {
+  position: relative;
+  display: -ms-flexbox;
+  display: flex;
+  -ms-flex-direction: column;
+  flex-direction: column;
+  width: 100%;
+  pointer-events: auto;
+  background-color: #fff;
+  background-clip: padding-box;
+  border: 1px solid rgba(0, 0, 0, 0.2);
+  border-radius: 0.3rem;
+  outline: 0;
+  box-shadow: 0px 0px 30px black;
+}
+
+.modal-backdrop {
+  position: fixed;
+  top: 0;
+  right: 0;
+  bottom: 0;
+  left: 0;
+  z-index: 1040;
+  background-color: #000;
+}
+
+.modal-backdrop.fade {
+  opacity: 0;
+}
+
+.modal-backdrop.show {
+  opacity: 0.5;
+}
+
+.modal-header {
+  display: -ms-flexbox;
+  display: flex;
+  -ms-flex-align: start;
+  align-items: flex-start;
+  -ms-flex-pack: justify;
+  justify-content: space-between;
+  padding: 1rem;
+  border-bottom: 1px solid #e9ecef;
+  border-top-left-radius: 0.3rem;
+  border-top-right-radius: 0.3rem;
+}
+
+.modal-header .close {
+  padding: 1rem;
+  margin: -1rem -1rem -1rem auto;
+}
+
+.modal-header h5 {
+  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
+  font-size: 1.25rem;
+  color: #212529;
+  text-align: left;
+  background-color: #fff;
+  margin-bottom: 0.5rem;
+  font-weight: 500;
+  line-height: 1.2;
+}
+
+.modal-title {
+  margin-bottom: 0;
+  line-height: 1.5;
+}
+
+.modal-body {
+  position: relative;
+  -ms-flex: 1 1 auto;
+  flex: 1 1 auto;
+  padding: 1rem;
+}
+
+.modal-body p {
+  margin: 0;
+  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
+  font-size: 1rem;
+  font-weight: 400;
+  line-height: 1.5;
+  color: #212529;
+  text-align: left;
+  background-color: #fff;
+}
+
+.modal-footer {
+  display: -ms-flexbox;
+  display: flex;
+  -ms-flex-align: center;
+  align-items: center;
+  -ms-flex-pack: end;
+  justify-content: flex-end;
+  padding: 1rem;
+  border-top: 1px solid #e9ecef;
+}
+
+.modal-footer > :not(:first-child) {
+  margin-left: .25rem;
+}
+
+.modal-footer > :not(:last-child) {
+  margin-right: .25rem;
+}
+
+.modal-scrollbar-measure {
+  position: absolute;
+  top: -9999px;
+  width: 50px;
+  height: 50px;
+  overflow: scroll;
+}
+
+@media (min-width: 576px) {
+  .modal-dialog {
+    max-width: 500px;
+    margin: 1.75rem auto;
+  }
+  .modal-dialog-centered {
+    min-height: calc(100% - (1.75rem * 2));
+  }
+  .modal-dialog-centered::before {
+    height: calc(100vh - (1.75rem * 2));
+  }
+  .modal-sm {
+    max-width: 300px;
+  }
+}
+
+@media (min-width: 992px) {
+  .modal-lg {
+    max-width: 800px;
+  }
+}
+
+.btn {
+  display: inline-block;
+  font-weight: 400;
+  text-align: center;
+  white-space: nowrap;
+  vertical-align: middle;
+  -webkit-user-select: none;
+  -moz-user-select: none;
+  -ms-user-select: none;
+  user-select: none;
+  border: 1px solid transparent;
+  padding: 0.375rem 0.75rem;
+  font-size: 1rem;
+  line-height: 1.5;
+  border-radius: 0.25rem;
+  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
+}
+
+@media screen and (prefers-reduced-motion: reduce) {
+  .btn {
+    transition: none;
+  }
+}
+
+.btn:hover, .btn:focus {
+  text-decoration: none;
+}
+
+.btn:focus, .btn.focus {
+  outline: 0;
+  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
+}
+
+.btn.disabled, .btn:disabled {
+  opacity: 0.65;
+}
+
+.btn:not(:disabled):not(.disabled) {
+  cursor: pointer;
+}
+
+a.btn.disabled,
+fieldset:disabled a.btn {
+  pointer-events: none;
+}
+
+.btn-primary {
+  color: #fff;
+  background-color: #007bff;
+  border-color: #007bff;
+}
+
+.btn-primary:hover {
+  color: #fff;
+  background-color: #0069d9;
+  border-color: #0062cc;
+}
+
+.btn-primary:focus, .btn-primary.focus {
+  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);
+}
+
+.btn-primary.disabled, .btn-primary:disabled {
+  color: #fff;
+  background-color: #007bff;
+  border-color: #007bff;
+}
+
+.btn-primary:not(:disabled):not(.disabled):active, .btn-primary:not(:disabled):not(.disabled).active,
+.show > .btn-primary.dropdown-toggle {
+  color: #fff;
+  background-color: #0062cc;
+  border-color: #005cbf;
+}
+
+.btn-primary:not(:disabled):not(.disabled):active:focus, .btn-primary:not(:disabled):not(.disabled).active:focus,
+.show > .btn-primary.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);
+}
+
+.btn-secondary {
+  color: #fff;
+  background-color: #6c757d;
+  border-color: #6c757d;
+}
+
+.btn-secondary:hover {
+  color: #fff;
+  background-color: #5a6268;
+  border-color: #545b62;
+}
+
+.btn-secondary:focus, .btn-secondary.focus {
+  box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5);
+}
+
+.btn-secondary.disabled, .btn-secondary:disabled {
+  color: #fff;
+  background-color: #6c757d;
+  border-color: #6c757d;
+}
+
+.btn-secondary:not(:disabled):not(.disabled):active, .btn-secondary:not(:disabled):not(.disabled).active,
+.show > .btn-secondary.dropdown-toggle {
+  color: #fff;
+  background-color: #545b62;
+  border-color: #4e555b;
+}
+
+.btn-secondary:not(:disabled):not(.disabled):active:focus, .btn-secondary:not(:disabled):not(.disabled).active:focus,
+.show > .btn-secondary.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5);
+}
+
+.btn-success {
+  color: #fff;
+  background-color: #28a745;
+  border-color: #28a745;
+}
+
+.btn-success:hover {
+  color: #fff;
+  background-color: #218838;
+  border-color: #1e7e34;
+}
+
+.btn-success:focus, .btn-success.focus {
+  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5);
+}
+
+.btn-success.disabled, .btn-success:disabled {
+  color: #fff;
+  background-color: #28a745;
+  border-color: #28a745;
+}
+
+.btn-success:not(:disabled):not(.disabled):active, .btn-success:not(:disabled):not(.disabled).active,
+.show > .btn-success.dropdown-toggle {
+  color: #fff;
+  background-color: #1e7e34;
+  border-color: #1c7430;
+}
+
+.btn-success:not(:disabled):not(.disabled):active:focus, .btn-success:not(:disabled):not(.disabled).active:focus,
+.show > .btn-success.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5);
+}
+
+.btn-info {
+  color: #fff;
+  background-color: #17a2b8;
+  border-color: #17a2b8;
+}
+
+.btn-info:hover {
+  color: #fff;
+  background-color: #138496;
+  border-color: #117a8b;
+}
+
+.btn-info:focus, .btn-info.focus {
+  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5);
+}
+
+.btn-info.disabled, .btn-info:disabled {
+  color: #fff;
+  background-color: #17a2b8;
+  border-color: #17a2b8;
+}
+
+.btn-info:not(:disabled):not(.disabled):active, .btn-info:not(:disabled):not(.disabled).active,
+.show > .btn-info.dropdown-toggle {
+  color: #fff;
+  background-color: #117a8b;
+  border-color: #10707f;
+}
+
+.btn-info:not(:disabled):not(.disabled):active:focus, .btn-info:not(:disabled):not(.disabled).active:focus,
+.show > .btn-info.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5);
+}
+
+.btn-warning {
+  color: #212529;
+  background-color: #ffc107;
+  border-color: #ffc107;
+}
+
+.btn-warning:hover {
+  color: #212529;
+  background-color: #e0a800;
+  border-color: #d39e00;
+}
+
+.btn-warning:focus, .btn-warning.focus {
+  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);
+}
+
+.btn-warning.disabled, .btn-warning:disabled {
+  color: #212529;
+  background-color: #ffc107;
+  border-color: #ffc107;
+}
+
+.btn-warning:not(:disabled):not(.disabled):active, .btn-warning:not(:disabled):not(.disabled).active,
+.show > .btn-warning.dropdown-toggle {
+  color: #212529;
+  background-color: #d39e00;
+  border-color: #c69500;
+}
+
+.btn-warning:not(:disabled):not(.disabled):active:focus, .btn-warning:not(:disabled):not(.disabled).active:focus,
+.show > .btn-warning.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);
+}
+
+.btn-danger {
+  color: #fff;
+  background-color: #dc3545;
+  border-color: #dc3545;
+}
+
+.btn-danger:hover {
+  color: #fff;
+  background-color: #c82333;
+  border-color: #bd2130;
+}
+
+.btn-danger:focus, .btn-danger.focus {
+  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);
+}
+
+.btn-danger.disabled, .btn-danger:disabled {
+  color: #fff;
+  background-color: #dc3545;
+  border-color: #dc3545;
+}
+
+.btn-danger:not(:disabled):not(.disabled):active, .btn-danger:not(:disabled):not(.disabled).active,
+.show > .btn-danger.dropdown-toggle {
+  color: #fff;
+  background-color: #bd2130;
+  border-color: #b21f2d;
+}
+
+.btn-danger:not(:disabled):not(.disabled):active:focus, .btn-danger:not(:disabled):not(.disabled).active:focus,
+.show > .btn-danger.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);
+}
+
+.btn-light {
+  color: #212529;
+  background-color: #f8f9fa;
+  border-color: #f8f9fa;
+}
+
+.btn-light:hover {
+  color: #212529;
+  background-color: #e2e6ea;
+  border-color: #dae0e5;
+}
+
+.btn-light:focus, .btn-light.focus {
+  box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5);
+}
+
+.btn-light.disabled, .btn-light:disabled {
+  color: #212529;
+  background-color: #f8f9fa;
+  border-color: #f8f9fa;
+}
+
+.btn-light:not(:disabled):not(.disabled):active, .btn-light:not(:disabled):not(.disabled).active,
+.show > .btn-light.dropdown-toggle {
+  color: #212529;
+  background-color: #dae0e5;
+  border-color: #d3d9df;
+}
+
+.btn-light:not(:disabled):not(.disabled):active:focus, .btn-light:not(:disabled):not(.disabled).active:focus,
+.show > .btn-light.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5);
+}
+
+.btn-dark {
+  color: #fff;
+  background-color: #343a40;
+  border-color: #343a40;
+}
+
+.btn-dark:hover {
+  color: #fff;
+  background-color: #23272b;
+  border-color: #1d2124;
+}
+
+.btn-dark:focus, .btn-dark.focus {
+  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);
+}
+
+.btn-dark.disabled, .btn-dark:disabled {
+  color: #fff;
+  background-color: #343a40;
+  border-color: #343a40;
+}
+
+.btn-dark:not(:disabled):not(.disabled):active, .btn-dark:not(:disabled):not(.disabled).active,
+.show > .btn-dark.dropdown-toggle {
+  color: #fff;
+  background-color: #1d2124;
+  border-color: #171a1d;
+}
+
+.btn-dark:not(:disabled):not(.disabled):active:focus, .btn-dark:not(:disabled):not(.disabled).active:focus,
+.show > .btn-dark.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);
+}
+
+.btn-outline-primary {
+  color: #007bff;
+  background-color: transparent;
+  background-image: none;
+  border-color: #007bff;
+}
+
+.btn-outline-primary:hover {
+  color: #fff;
+  background-color: #007bff;
+  border-color: #007bff;
+}
+
+.btn-outline-primary:focus, .btn-outline-primary.focus {
+  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);
+}
+
+.btn-outline-primary.disabled, .btn-outline-primary:disabled {
+  color: #007bff;
+  background-color: transparent;
+}
+
+.btn-outline-primary:not(:disabled):not(.disabled):active, .btn-outline-primary:not(:disabled):not(.disabled).active,
+.show > .btn-outline-primary.dropdown-toggle {
+  color: #fff;
+  background-color: #007bff;
+  border-color: #007bff;
+}
+
+.btn-outline-primary:not(:disabled):not(.disabled):active:focus, .btn-outline-primary:not(:disabled):not(.disabled).active:focus,
+.show > .btn-outline-primary.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.5);
+}
+
+.btn-outline-secondary {
+  color: #6c757d;
+  background-color: transparent;
+  background-image: none;
+  border-color: #6c757d;
+}
+
+.btn-outline-secondary:hover {
+  color: #fff;
+  background-color: #6c757d;
+  border-color: #6c757d;
+}
+
+.btn-outline-secondary:focus, .btn-outline-secondary.focus {
+  box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5);
+}
+
+.btn-outline-secondary.disabled, .btn-outline-secondary:disabled {
+  color: #6c757d;
+  background-color: transparent;
+}
+
+.btn-outline-secondary:not(:disabled):not(.disabled):active, .btn-outline-secondary:not(:disabled):not(.disabled).active,
+.show > .btn-outline-secondary.dropdown-toggle {
+  color: #fff;
+  background-color: #6c757d;
+  border-color: #6c757d;
+}
+
+.btn-outline-secondary:not(:disabled):not(.disabled):active:focus, .btn-outline-secondary:not(:disabled):not(.disabled).active:focus,
+.show > .btn-outline-secondary.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.5);
+}
+
+.btn-outline-success {
+  color: #28a745;
+  background-color: transparent;
+  background-image: none;
+  border-color: #28a745;
+}
+
+.btn-outline-success:hover {
+  color: #fff;
+  background-color: #28a745;
+  border-color: #28a745;
+}
+
+.btn-outline-success:focus, .btn-outline-success.focus {
+  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5);
+}
+
+.btn-outline-success.disabled, .btn-outline-success:disabled {
+  color: #28a745;
+  background-color: transparent;
+}
+
+.btn-outline-success:not(:disabled):not(.disabled):active, .btn-outline-success:not(:disabled):not(.disabled).active,
+.show > .btn-outline-success.dropdown-toggle {
+  color: #fff;
+  background-color: #28a745;
+  border-color: #28a745;
+}
+
+.btn-outline-success:not(:disabled):not(.disabled):active:focus, .btn-outline-success:not(:disabled):not(.disabled).active:focus,
+.show > .btn-outline-success.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(40, 167, 69, 0.5);
+}
+
+.btn-outline-info {
+  color: #17a2b8;
+  background-color: transparent;
+  background-image: none;
+  border-color: #17a2b8;
+}
+
+.btn-outline-info:hover {
+  color: #fff;
+  background-color: #17a2b8;
+  border-color: #17a2b8;
+}
+
+.btn-outline-info:focus, .btn-outline-info.focus {
+  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5);
+}
+
+.btn-outline-info.disabled, .btn-outline-info:disabled {
+  color: #17a2b8;
+  background-color: transparent;
+}
+
+.btn-outline-info:not(:disabled):not(.disabled):active, .btn-outline-info:not(:disabled):not(.disabled).active,
+.show > .btn-outline-info.dropdown-toggle {
+  color: #fff;
+  background-color: #17a2b8;
+  border-color: #17a2b8;
+}
+
+.btn-outline-info:not(:disabled):not(.disabled):active:focus, .btn-outline-info:not(:disabled):not(.disabled).active:focus,
+.show > .btn-outline-info.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(23, 162, 184, 0.5);
+}
+
+.btn-outline-warning {
+  color: #ffc107;
+  background-color: transparent;
+  background-image: none;
+  border-color: #ffc107;
+}
+
+.btn-outline-warning:hover {
+  color: #212529;
+  background-color: #ffc107;
+  border-color: #ffc107;
+}
+
+.btn-outline-warning:focus, .btn-outline-warning.focus {
+  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);
+}
+
+.btn-outline-warning.disabled, .btn-outline-warning:disabled {
+  color: #ffc107;
+  background-color: transparent;
+}
+
+.btn-outline-warning:not(:disabled):not(.disabled):active, .btn-outline-warning:not(:disabled):not(.disabled).active,
+.show > .btn-outline-warning.dropdown-toggle {
+  color: #212529;
+  background-color: #ffc107;
+  border-color: #ffc107;
+}
+
+.btn-outline-warning:not(:disabled):not(.disabled):active:focus, .btn-outline-warning:not(:disabled):not(.disabled).active:focus,
+.show > .btn-outline-warning.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(255, 193, 7, 0.5);
+}
+
+.btn-outline-danger {
+  color: #dc3545;
+  background-color: transparent;
+  background-image: none;
+  border-color: #dc3545;
+}
+
+.btn-outline-danger:hover {
+  color: #fff;
+  background-color: #dc3545;
+  border-color: #dc3545;
+}
+
+.btn-outline-danger:focus, .btn-outline-danger.focus {
+  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);
+}
+
+.btn-outline-danger.disabled, .btn-outline-danger:disabled {
+  color: #dc3545;
+  background-color: transparent;
+}
+
+.btn-outline-danger:not(:disabled):not(.disabled):active, .btn-outline-danger:not(:disabled):not(.disabled).active,
+.show > .btn-outline-danger.dropdown-toggle {
+  color: #fff;
+  background-color: #dc3545;
+  border-color: #dc3545;
+}
+
+.btn-outline-danger:not(:disabled):not(.disabled):active:focus, .btn-outline-danger:not(:disabled):not(.disabled).active:focus,
+.show > .btn-outline-danger.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.5);
+}
+
+.btn-outline-light {
+  color: #f8f9fa;
+  background-color: transparent;
+  background-image: none;
+  border-color: #f8f9fa;
+}
+
+.btn-outline-light:hover {
+  color: #212529;
+  background-color: #f8f9fa;
+  border-color: #f8f9fa;
+}
+
+.btn-outline-light:focus, .btn-outline-light.focus {
+  box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5);
+}
+
+.btn-outline-light.disabled, .btn-outline-light:disabled {
+  color: #f8f9fa;
+  background-color: transparent;
+}
+
+.btn-outline-light:not(:disabled):not(.disabled):active, .btn-outline-light:not(:disabled):not(.disabled).active,
+.show > .btn-outline-light.dropdown-toggle {
+  color: #212529;
+  background-color: #f8f9fa;
+  border-color: #f8f9fa;
+}
+
+.btn-outline-light:not(:disabled):not(.disabled):active:focus, .btn-outline-light:not(:disabled):not(.disabled).active:focus,
+.show > .btn-outline-light.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(248, 249, 250, 0.5);
+}
+
+.btn-outline-dark {
+  color: #343a40;
+  background-color: transparent;
+  background-image: none;
+  border-color: #343a40;
+}
+
+.btn-outline-dark:hover {
+  color: #fff;
+  background-color: #343a40;
+  border-color: #343a40;
+}
+
+.btn-outline-dark:focus, .btn-outline-dark.focus {
+  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);
+}
+
+.btn-outline-dark.disabled, .btn-outline-dark:disabled {
+  color: #343a40;
+  background-color: transparent;
+}
+
+.btn-outline-dark:not(:disabled):not(.disabled):active, .btn-outline-dark:not(:disabled):not(.disabled).active,
+.show > .btn-outline-dark.dropdown-toggle {
+  color: #fff;
+  background-color: #343a40;
+  border-color: #343a40;
+}
+
+.btn-outline-dark:not(:disabled):not(.disabled):active:focus, .btn-outline-dark:not(:disabled):not(.disabled).active:focus,
+.show > .btn-outline-dark.dropdown-toggle:focus {
+  box-shadow: 0 0 0 0.2rem rgba(52, 58, 64, 0.5);
+}
+
+.btn-link {
+  font-weight: 400;
+  color: #007bff;
+  background-color: transparent;
+}
+
+.btn-link:hover {
+  color: #0056b3;
+  text-decoration: underline;
+  background-color: transparent;
+  border-color: transparent;
+}
+
+.btn-link:focus, .btn-link.focus {
+  text-decoration: underline;
+  border-color: transparent;
+  box-shadow: none;
+}
+
+.btn-link:disabled, .btn-link.disabled {
+  color: #6c757d;
+  pointer-events: none;
+}
+
+.btn-lg, .btn-group-lg > .btn {
+  padding: 0.5rem 1rem;
+  font-size: 1.25rem;
+  line-height: 1.5;
+  border-radius: 0.3rem;
+}
+
+.btn-sm, .btn-group-sm > .btn {
+  padding: 0.25rem 0.5rem;
+  font-size: 0.875rem;
+  line-height: 1.5;
+  border-radius: 0.2rem;
+}
+
+.btn-block {
+  display: block;
+  width: 100%;
+}
+
+.btn-block + .btn-block {
+  margin-top: 0.5rem;
+}
+
+input[type="submit"].btn-block,
+input[type="reset"].btn-block,
+input[type="button"].btn-block {
+  width: 100%;
+}
\ No newline at end of file
-- 
2.20.1.windows.1

